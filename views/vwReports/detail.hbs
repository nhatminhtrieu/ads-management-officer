{{#section "js"}}
<script>
    function updatePreview(list, hidden = true) {
        const previewDiv = document.querySelector('#preview')
        previewDiv.innerHTML = ''
        list.map((img, index) => {
            const div = document.createElement('div')
            div.classList.add('col-4')
            div.style = `position: relative; height: 300px;`
            const imgEle = document.createElement('img')
            imgEle.src = img
            imgEle.style = `width: 100%; height: 100%; object-fit: cover; border-radius: 0.375rem;`
            const btn = document.createElement('button')
            btn.setAttribute('type', 'button')
            btn.classList.add('btn', 'btn-danger')
            btn.id = 'deleteImgButton'
            btn.style = `position: absolute; top: 4%; right: 4%;`
            btn.setAttribute('data-index', index)
            hidden && btn.setAttribute('hidden', true)
            btn.innerHTML = `<i class="bi bi-trash"></i>`
            btn.setAttribute('onclick', 'handleDelImg(this);')

            div.appendChild(imgEle)
            div.appendChild(btn)
            previewDiv.appendChild(div)
        })
    }

    function updateHidden(images) {
        const hiddenDiv = document.getElementById('hiddenImgsInput')
        hiddenDiv.innerHTML = ''
        images.map((file) => {
            const input = document.createElement('input')
            input.setAttribute('type', 'hidden')
            input.setAttribute('name', 'imgs[]')
            input.setAttribute('value', file)
            hiddenDiv.append(input)
        })
    }

    let imgsArr = {{{ json report.imgs }}}

    window.onload = function () {
        updatePreview(imgsArr)
        updateHidden(imgsArr)
    }

    function handleDelImg(ele) {
        const id = ele.getAttribute('data-index')
        imgsArr = imgsArr.filter((item, index) => {
            return index != id
        })

        updatePreview(imgsArr, false)
        updateHidden(imgsArr)
    }

    $("#edit").click(function () {
        $('#typeReport').prop("disabled", false);
        $('#typeReport').prop("required", true);
        $('#resolvedContent').prop("disabled", false);
        $('#statusReport').prop("disabled", false);
        $('#number').prop("disabled", false);
        $('#size').prop("disabled", false);
        $('#file').prop("disabled", false);
        $('#deleteButton').prop("hidden", false);
        $('#edit').prop("hidden", true);
        $('#fnButton').show();
        document.querySelectorAll('#deleteImgButton').forEach((btn) => btn.removeAttribute('hidden'))
        $('#start').prop("disabled", false);
        $('#end').prop("disabled", false);
    });

    $("#cancelButton").click(function () {
        window.location.reload();
    });

    $("#deleteButton").click(function (e) {
        e.preventDefault();
        $.post("/report/manage/delete/{{report._id}}", function (response) {
            window.location.href = '/report/manage';
        })
    });
</script>

{{!-- Datetimepicker --}}
<script
    src="https://cdnjs.cloudflare.com/ajax/libs/jquery-datetimepicker/2.5.20/jquery.datetimepicker.full.min.js"></script>
<script>
    $('#createDate').datetimepicker({
        timepicker: false,
        format: 'd/m/Y',
        mask: true,
        scrollMonth: false,
        scrollInput: false,
        parentID: 'createDateDiv'
    });
</script>
{{!-- Handle files change --}}
<script>
    function readAsDataURL(file) {
        return new Promise((resolve, reject) => {
            let fileReader = new FileReader();
            fileReader.onload = function () {
                return resolve(fileReader.result);
            }
            fileReader.readAsDataURL(file);
        })
    }

    function checkFilesSize(files) {
        let sum = 0
        imgsArr.map((img) => sum += img.length / 1024 / 1024)
        files.map((file) => sum += file.size / 1024 / 1024)
        const imgsInput = document.querySelector('input#file')
        const submitBtn = document.querySelector('button[type="submit"]')
        if (sum > 10) {
            imgsInput.classList.add('is-invalid')
            !submitBtn.classList.contains('disabled') && submitBtn.classList.add('disabled')
        } else {
            imgsInput.classList.contains('is-invalid') && imgsInput.classList.remove('is-invalid')
            submitBtn.classList.contains('disabled') && submitBtn.classList.remove('disabled')
        }
    }

    $('input#file').on('change', async (e) => {
        const files = Array.from(e.currentTarget.files);
        if (files.length) {
            checkFilesSize(files)
            const images = await Promise.all(files.map((file) => {
                return readAsDataURL(file)
            }))

            imgsArr.push(images)
            updatePreview(imgsArr, false)
            updateHidden(imgsArr)
        }
    })
</script>
{{/section}}

{{#section "css"}}
<link rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/jquery-datetimepicker/2.5.20/jquery.datetimepicker.min.css" />
{{/section}}

<a class="btn p-0 link-primary" href="/report">
    <i class="bi bi-caret-left"></i>
    Trở về
</a>

<div class="d-flex justify-content-between">
    <div class="mt-3" style="display: flex; align-items: center;">
        <h4>Thông tin chi tiết báo cáo </h4>
        {{#ifCond authUser.role '!==' 3}}
        <div id="edit" style="margin-left: 16px; cursor: pointer">
            <i class="bi bi-pencil-square"></i>
            Chỉnh sửa
        </div>
        {{/ifCond}}
    </div>

    <div class="mt-3">
        <button type="button" class="btn btn-danger" id="deleteButton" hidden>
            <i class="bi bi-trash"></i>
            Xóa
        </button>
    </div>
</div>

<form method="POST">
    <div class="form-outline mt-3">
        <label class="form-label" for="address">Địa chỉ báo cáo</label>
        <input type="text" id="address" class="form-control border-2" value="{{report.address}}" disabled />
    </div>

    <div class="form-outline mt-3">
        <label class="form-label" for="typeReport">Loại báo cáo</label>
        <select id="typeReport" class="form-select border-2" name="typeReport" value="{{report.typeReportName}}"
            required disabled>
            {{#each reportTypes}}
            <option value="{{this._id}}" {{#ifCond this.name "==" ../report.typeReportName}}selected{{/ifCond}}>
                {{this.name}}
            </option>
            {{/each}}
        </select>
    </div>

    <div class="form-outline mt-3">
        <div class="row g-3">
            <div class="col">
                <label class="form-label" for="content">Nội dung báo cáo</label>
                <div id="content" class="form-control border-2" name="content"
                    style="pointer-events: none; background-color: #eee;">
                    {{{report.content}}}
                </div>
            </div>
        </div>
    </div>

    <div class="form-outline mt-3">
        <label class="form-label" for="type">Hình ảnh báo cáo</label>
        <div class="mt-3 row flex-nowrap overflow-auto" id="preview">
            {{#each report.imgs}}
            <div class="col-4" style="position: relative; height: 300px;">
                <img src="{{this}}" alt="Ảnh báo cáo" />
            </div>
            {{/each}}
        </div>
    </div>

    <div class="form-outline mt-3">
        <div class="row g-3">
            <div class="col" id="createDateDiv">
                <label class="form-label" for="start">Ngày báo cáo</label>
                <input type="text" id="" class="form-control border-2" name="start" value="{{formatDays.createDate}}"
                    disabled />
            </div>
        </div>
    </div>

    <div class="form-outline mt-3">
        <label class="form-label" for="statusReport">Trạng thái báo cáo</label>
        <select id="statusReport" class="form-select border-2" name="statusReport" required disabled>
            {{#each statusReports}}
            <option value="{{this}}" {{#ifCond this "===" ../report.type}}selected{{/ifCond}}>{{this}}</option>
            {{/each}}
        </select>
    </div>

    <div class="form-outline mt-3">
        <div class="row g-3">
            <div class="col">
                <label class="form-label" for="resolvedContent">Cách thức xử lý</label>
                <input type="text" id="resolvedContent" class="form-control border-2" name="resolvedContent"
                    value="{{report.resolvedContent}}" required disabled />
            </div>
        </div>
    </div>

    <div id="fnButton" class="mt-3" style="display: none;">
        <a id="cancelButton" class="btn btn-secondary" role="button">
            Hủy
        </a>
        <button type="submit" class="btn btn-primary">
            <i class="bi bi-floppy"></i>
            Lưu
        </button>
    </div>
</form>