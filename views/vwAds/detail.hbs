{{#section "js"}}
  <script type="module">
    import CustomMap from "/static/js/map/CustomMap.js"; 
	  import { contentAd } from "/static/js/loadMarker.js"; 
    const HomeMap = new CustomMap();
      HomeMap.init().then(() => { 
      const contentString = contentAd({{{json location }}}); 
      HomeMap.pushAdMarker({{{json location}}}, {{{json location.address}}}, contentString); 
      HomeMap.setCenter({{{json location.coordinate }}}); 
    });
  </script>
  <script>
    function updatePreview(list, hidden = true) {
      const previewDiv = document.querySelector('#preview')
      previewDiv.innerHTML = ''
      list.map((img, index) => {
        const div = document.createElement('div')
        div.classList.add('col-4')
        div.style = `position: relative; height: 300px;`
        const imgEle = document.createElement('img')
        imgEle.src = img
        imgEle.style = `width: 100%; height: 100%; object-fit: cover; border-radius: 0.375rem;`
        const btn = document.createElement('button')
        btn.setAttribute('type', 'button')
        btn.classList.add('btn', 'btn-danger')
        btn.id='deleteImgButton'
        btn.style = `position: absolute; top: 4%; right: 4%;`
        btn.setAttribute('data-index', index)
        hidden && btn.setAttribute('hidden', true)
        btn.innerHTML = `<i class="bi bi-trash"></i>`
        btn.setAttribute('onclick', 'handleDelImg(this);')

        div.appendChild(imgEle)
        div.appendChild(btn)
        previewDiv.appendChild(div)
      })
    }

    function updateHidden(images) {
      const hiddenDiv = document.getElementById('hiddenImgsInput')
      hiddenDiv.innerHTML = ''
      images.map((file) => {
        const input = document.createElement('input')
        input.setAttribute('type', 'hidden')
        input.setAttribute('name', 'imgs[]')
        input.setAttribute('value', file)
        hiddenDiv.append(input)
      }) 
    }

    let imgsArr = {{{json ad.imgs}}}

    window.onload = function () { 
      updatePreview(imgsArr)
      updateHidden(imgsArr)
    } 

    function handleDelImg(ele) {
      const id = ele.getAttribute('data-index')
      imgsArr = imgsArr.filter((item, index) => {
        return index != id
      })

      updatePreview(imgsArr, false)
      updateHidden(imgsArr)
    }

    $("#edit").click(function () { 
      $('#typeBoard').prop("disabled", false); 
      $('#typeBoard').prop("required", true); 
      $('#number').prop("disabled", false); 
      $('#size').prop("disabled", false); 
      $('#file').prop("disabled", false);
      $('#deleteButton').prop("hidden", false);
      $('#edit').prop("hidden", true);
      $('#fnButton').show(); 
      document.querySelectorAll('#deleteImgButton').forEach((btn) => btn.removeAttribute('hidden'))
      $('#start').prop("disabled", false); 
      $('#end').prop("disabled", false);
    }); 
    $("#cancelButton").click(function () {
        window.location.reload(); 
    }); 
    $("#deleteButton").click(function (e) {
      e.preventDefault(); 
      $.post("/advertisement/manage/delete/{{ad._id}}", function (response) { 
        window.location.href = '/advertisement/manage'; 
      }) 
    });
  </script>
  {{!-- Datetimepicker --}}
  <script
    src="https://cdnjs.cloudflare.com/ajax/libs/jquery-datetimepicker/2.5.20/jquery.datetimepicker.full.min.js"
  ></script>
  <script>
    $('#start').datetimepicker({ 
      timepicker: false, 
      format: 'd/m/Y', 
      mask: true,
      scrollMonth: false, 
      scrollInput: false, 
    }); 
    $('#end').datetimepicker({
      imepicker: false, 
      format: 'd/m/Y', 
      mask: true, 
      scrollMonth: false,
      scrollInput: false,
    });
  </script>
  {{!-- Handle files change --}}
  <script>
    function readAsDataURL(file) {
      return new Promise((resolve, reject)=>{
        let fileReader = new FileReader();
        fileReader.onload = function(){
          return resolve(fileReader.result);
        }
        fileReader.readAsDataURL(file);
      })
    } 

    function checkFilesSize(files) {
      let sum = 0
      imgsArr.map((img) => sum += img.length / 1024 / 1024)
      files.map((file) => sum += file.size / 1024 / 1024)
      const imgsInput = document.querySelector('input#file')
      const submitBtn = document.querySelector('button[type="submit"]')
      if (sum > 10) {
        imgsInput.classList.add('is-invalid')
        !submitBtn.classList.contains('disabled') && submitBtn.classList.add('disabled')
      } else {
        imgsInput.classList.contains('is-invalid') && imgsInput.classList.remove('is-invalid')
        submitBtn.classList.contains('disabled') && submitBtn.classList.remove('disabled')
      }
    }

    $('input#file').on('change', async (e) => { 
		const files = Array.from(e.currentTarget.files); 
		if (files.length) { 
			checkFilesSize(files)
			const images = await Promise.all(files.map((file) => {
				return readAsDataURL(file)
			}))
      
      imgsArr.push(images)
      updatePreview(imgsArr, false)
      updateHidden(imgsArr)
		} 
	})
  </script>
{{/section}}

{{#section "css"}}
  <link
    rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/jquery-datetimepicker/2.5.20/jquery.datetimepicker.min.css"
  />
{{/section}}

<a class="btn p-0 link-primary" href="/advertisement/manage" role="button">
  <i class="bi bi-caret-left"></i>
  Trở về
</a>

<div id="map" style="height: 400px; width: 100%;" class="mt-3"></div>

<div class="d-flex justify-content-between">
  <div class="mt-3" style="display: flex; align-items: center;">
    <h4>Thông tin chi tiết bảng quảng cáo </h4>
    <div id="edit" style="margin-left: 16px; cursor: pointer">
      <i class="bi bi-pencil-square"></i>
      Chỉnh sửa
    </div>
  </div>

  <div class="mt-3">
    <button
      type="button"
      class="btn btn-danger"
      id="deleteButton"
      hidden
    >
      <i class="bi bi-trash"></i>
      Xóa
    </button>
  </div>
</div>

<form method="POST">
  <div class="form-outline mt-3">
    <label class="form-label" for="address">Địa chỉ</label>
    <input
      type="text"
      id="address"
      class="form-control border-2"
      value="{{location.address}}"
      disabled
    />
  </div>

  <div id="hiddenImgsInput"></div>

  <div class="form-outline mt-3">
    <label class="form-label" for="typeBoard">Loại bảng quảng cáo</label>
    <select id="typeBoard" class="form-select" name="typeBoard" required disabled>
      {{#each typeBoards}}
        <option value="{{name}}" {{#if isSelected}}selected{{/if}}>{{name}}</option>
      {{/each}}
    </select>
  </div>
  <div class="form-outline mt-3">
    <div class="row g-3">
      <div class="col">
        <label class="form-label" for="number">Số lượng</label>
        <input
          type="text"
          id="number"
          class="form-control border-2"
          name="number"
          value="{{ad.number}}"
          disabled
        />
      </div>
      <div class="col">
        <label class="form-label" for="size">Kích thước</label>
        <input
          type="text"
          id="size"
          class="form-control border-2"
          name="size"
          value="{{ad.size}}"
          disabled
        />
      </div>
    </div>
  </div>
  <div class="form-outline mt-3">
    <label class="form-label" for="type">Hình ảnh bảng quảng cáo</label>
    <input
      type="file"
      id="file"
      class="form-control border-2"
      name="file"
      aria-describedby="fileHelp"
		  accept="image/*"
      multiple
      disabled
    />
    <div id="fileHelp" class="invalid-feedback">
		Tổng dung lượng các hình tối đa 10MB.
	</div>
    <div class="mt-3 row flex-nowrap overflow-auto" id="preview">
    </div>
  </div>
  <div class="form-outline mt-3">
    <div class="row g-3">
      <div class="col">
        <label class="form-label" for="start">Ngày bắt đầu</label>
        <input
          type="text"
          id="start"
          class="form-control border-2"
          name="start"
          value="{{formatDays.start}}"
          disabled
        />
      </div>
      <div class="col">
        <label class="form-label" for="end">Ngày kết thúc</label>
        <input
          type="text"
          id="end"
          class="form-control border-2"
          name="end"
          value="{{formatDays.end}}"
          disabled
        />
      </div>
    </div>
  </div>

  <div id="fnButton" class="mt-3" style="display: none;">
    <a id="cancelButton" class="btn btn-secondary" role="button">
      Hủy
    </a>
    <button type="submit" class="btn btn-primary">
      <i class="bi bi-floppy"></i>
      Lưu
    </button>
  </div>
</form>