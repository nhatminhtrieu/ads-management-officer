{{#section "js"}}
<script type="module">
  import CustomMap from "/static/js/map/CustomMap.js";
  import { contentAd } from "/static/js/loadMarker.js";
  function onMapChange(returnData) {
    // Hide alert 
    $('#alert').prop("hidden", true);
    // If it has '_id' then it comes from database 
    // If it doesn't have '_id' then it comes from google map 
    if (returnData && returnData.hasOwnProperty("_id")) {
      const address = returnData.address;
      const locationId = returnData._id;
      $("#address").attr("value", address);
      $("#locationId").attr("value", locationId);
      $('button[type="submit"]').removeClass('disabled')
    }
  }
  const HomeMap = new CustomMap();
  const list = {{{ json locations }}};
  HomeMap.init(onMapChange).then(async () => {
    for (const location of list) {
      const contentString = contentAd(location);
      await HomeMap.pushAdMarker(location, location.address, contentString);
    }
    HomeMap.setAdCluster();
    HomeMap.map.addListener("click", (event) => {
      $("#address").attr("value", "");
      $("#locationId").attr("value", "");
      $('#alert').prop("hidden", false);
      $('button[type="submit"]').addClass('disabled')
    });
  })
</script>
<script>
  $(".disabled").on('keydown paste focus mousedown', function (e) {
    if (e.keyCode != 9) // ignore tab 
      e.preventDefault();
  });
</script>
<script>
  function readAsDataURL(file) {
    return new Promise((resolve, reject) => {
      let fileReader = new FileReader();
      fileReader.onload = function () {
        return resolve(fileReader.result);
      }
      fileReader.readAsDataURL(file);
    })
  }

  function checkFilesSize(files) {
    let sum = 0
    files.map((file) => sum += file.size / 1024 / 1024)
    const imgsInput = document.querySelector('input#file')
    const submitBtn = document.querySelector('button[type="submit"]')
    if (sum > 10) {
      imgsInput.classList.add('is-invalid')
      !submitBtn.classList.contains('disabled') && submitBtn.classList.add('disabled')
    } else {
      imgsInput.classList.contains('is-invalid') && imgsInput.classList.remove('is-invalid')
      submitBtn.classList.contains('disabled') && submitBtn.classList.remove('disabled')
    }
  }

  const container = document.getElementById('preview')
  const hiddenDiv = document.getElementById('hiddenImgsInput')
  $('input#file').on('change', async (e) => {
    container.innerHTML = ''
    hiddenDiv.innerHTML = ''
    const files = Array.from(e.currentTarget.files);
    if (files.length) {
      checkFilesSize(files)
      const images = await Promise.all(files.map((file) => {
        return readAsDataURL(file)
      }))
      images.map((file) => {
        const div = document.createElement('div')
        div.classList.add('col-3')
        div.style = `position: relative; height: 300px;`
        const img = document.createElement('img')
        img.setAttribute('src', file)
        img.style = `width: 100%; height: 100%; object-fit: cover; border-radius: 0.375rem;`
        div.append(img)
        container.append(div)

        const input = document.createElement('input')
        input.setAttribute('type', 'hidden')
        input.setAttribute('name', 'imgs[]')
        input.setAttribute('value', file)
        hiddenDiv.append(input)
      })
    }
  })
</script>
{{/section}}

{{#section "css"}}
<style>
  .disabled {
    pointer-events: none;
    background-color: #e9ecef;
  }
</style>
{{/section}}

<a class="btn p-0 link-primary" href="/advertisement/manage" role="button">
  <i class="bi bi-caret-left"></i>
  Trở về
</a>

<div class="alert alert-danger mt-3" role="alert" id="alert" hidden>
  Vui lòng chọn điểm đặt quảng cáo đã có trên bảng đồ!
</div>

<h4 class="mt-3">Tạo mới bảng quảng cáo</h4>
<div id="map" style="height:300px; width:100%"></div>

<form method="POST">
  <!-- Địa chỉ điểm đặt quảng cáo input -->
  <div class="form-outline mt-3">
    <label class="form-label">Điểm đặt quảng cáo
      <div style="display:inline; color:red">*</div>
    </label>
    <input type="text" id="address" class="form-control border-2 disabled"
      placeholder="Vui lòng chọn 1 điểm trên bản đồ" name="address" readonly />
  </div>

  <!-- Hidden input for locationId -->
  <input type="hidden" id="locationId" name="location" />

  <div id="hiddenImgsInput"></div>

  <div class="form-outline mt-3">
    <label class="form-label" for="txtTypeBoard">Loại bảng quảng cáo
      <div style="display:inline; color:red">*</div>
    </label>
    <select id="txtTypeBoard" class="form-select border-2" name="typeBoard" required>
      {{#each list}}
      <option value="{{this}}">{{this}}</option>
      {{/each}}
    </select>
  </div>

  <div class="form-outline mt-3">
    <div class="row g-3">
      <div class="col">
        <label class="form-label" for="number">Số lượng
          <div style="display:inline; color:red">*</div>
        </label>
        <input type="text" id="number" class="form-control border-2" name="number" placeholder="1 trụ/ 1 bảng"
          required />
      </div>
      <div class="col">
        <label class="form-label" for="size">Kích thước
          <div style="display:inline; color:red">*</div>
        </label>
        <input type="text" id="size" class="form-control border-2" name="size" placeholder="1m x 2m" required />
      </div>
    </div>
  </div>
  <div class="form-outline mt-3">
    <label class="form-label" for="type">Hình ảnh bảng quảng cáo
      <div style="display:inline; color:red">*</div>
    </label>
    <input type="file" id="file" class="form-control border-2" name="file" aria-describedby="fileHelp" accept="image/*"
      multiple required />
    <div id="fileHelp" class="invalid-feedback">
      Tổng dung lượng các hình tối đa 10MB.
    </div>
    <div class="mt-3 row flex-nowrap overflow-auto" id="preview">
    </div>
  </div>

  <div class="text-end">
    <button type="submit" class="btn btn-primary mt-3 disabled">
      <i class="bi bi-plus-lg"></i>
      Tạo mới
    </button>
  </div>
</form>